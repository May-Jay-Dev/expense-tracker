openapi: 3.0.3
info:
  title: Expense Tracker API
  version: 0.0.1
  description: API for managing trips, expenses, and users in an expense tracker.

servers:
  - url: https://api.expensetracker.com/v1

tags:
  - name: Trips
    description: Operations related to trips
  - name: Expenses
    description: Operations related to expenses within trips
  - name: Persons
    description: Operations related to persons within trips
  - name: Auth
    description: Operations related to user authentication

components:
  schemas:
    PageSize:
      type: integer
      description: Number of items in each page (Default = 10)
      example: 10
      minimum: 0
      maximum: 50
    PageNo:
      type: integer
      description: Page no (Default = 1)
      example: 1
      minimum: 0
    Date:
      type: string
      description: "Start date of the trip in YYYY-MM-DD"
      example: "2024-10-11"
    Trip:
      type: object
      properties:
        trip_id: 
          type: string
          readOnly: true
          example: "0000-0000-0000-0000-0000"
        name:
          type: string
          description: Name of the trip
          example: My Trip
        people:
          type: array
          items:
            $ref: "#/components/schemas/Person"
        start_date:
          $ref: "#/components/schemas/Date"
        end_date:
          $ref: "#/components/schemas/Date"
    Person:
      type: object
      properties:
        person_id:
          type: integer
          readOnly: true
          example: 0
        name: 
          type: string
          example: John Doe
        budget:
          type: number
          minimum: 1
    ExpenseValue:
      type: object
      description: Expense Value tracking for amount paid and cost
      additionalProperties:
        type: number
        minimum: 0
        example: "1000"
      example:
        "John Doe": 100
        "Jane Joe": 200
    Expense:
      type: object
      properties:
        expense_id:
          type: string
          readOnly: true
          example: "0000-0000-0000-0000-0000"
        name:
          type: string
          description: Name of the item
          example: Breakfast
        total:
          type: number
          description: Total cost of the item
          minimum: 0
          example: 1000
        currency:
          type: string
          description: Currency of the item
          example: JPY
        cost:
          $ref: "#/components/schemas/ExpenseValue"
        paid:
          $ref: "#/components/schemas/ExpenseValue"
    DailySummary:
      type: object
      properties:
        date:
          $ref: "#/components/schemas/Date"
        total:
          type: number
          minimum: 0
      description: Summary of daily total spent
    Summary:
      type: object
      properties:
        category:
          type: object
          description: Breakdown by category
          additionalProperties: 
            type: number
            minimum: 1
            example: 1
        daily:
          type: array
          items:
            $ref: "#/components/schemas/DailySummary"

paths:
  /trips:
    get:
      tags:
        - Trips
      summary: View all trips
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: Fuzzy search by trip name
          example: My Trip
        - in: query
          name: page_no
          schema:
            $ref: "#/components/schemas/PageNo"
          required: false
        - in: query
          name: page_size
          schema:
            $ref: "#/components/schemas/PageSize"
      responses:
        '200':
          description: A list of trips
          content:
            application/json:
              schema: 
                type: object
                properties:
                  trips:
                    type: array
                    items:
                      $ref: "#/components/schemas/Trip"
                  total:
                    type: integer
                    example: 1
                  page_no:
                    $ref: "#/components/schemas/PageNo"
                  page_size:
                    $ref: "#/components/schemas/PageSize"

    post:
      tags:
        - Trips
      summary: Add a new trip
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trip"
      responses:
        '201':
          description: Trip created successfully
          content: 
            application/json:
              schema:
                type: object
                properties:
                  trip_id:
                    type: string
                    description: Trip ID for trip identification

  /trips/{trip_id}:
    get:
      tags:
        - Trips
      summary: View a specific trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Trip details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trip"

                    
    put:
      tags:
        - Trips
      summary: Update a trip
      description: "Updates the trip with the new information. Dates are in YYYY:MM:DD format"
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                start_date:
                  $ref: "#/components/schemas/Date"
                end_date:
                  $ref: "#/components/schemas/Date"
      responses:
        '200':
          description: Trip updated successfully
    delete:
      tags:
        - Trips
      summary: Delete a trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Trip deleted successfully

  /trips/{trip_id}/expenses:
    get:
      tags:
        - Expenses
      summary: View all expenses for a specific trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
        - name: page_no
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/PageNo"
        - name: page_size
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/PageSize"
      responses:
        '200':
          description: A list of expenses for the trip
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Expense"
    post:
      tags:
        - Expenses
      summary: Add a new expense for a specific trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Expense"
      responses:
        '201':
          description: Expense created successfully

  /trips/{trip_id}/expenses/{expenseId}:
    get:
      tags:
        - Expenses
      summary: View a specific expense for a trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
        - name: expense_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Expense details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expense"
    put:
      tags:
        - Expenses
      summary: Update a specific expense for a trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
        - name: expenseId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Expense"
      responses:
        '200':
          description: Expense updated successfully
    delete:
      tags:
        - Expenses
      summary: Delete a specific expense for a trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
        - name: expenseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Expense deleted successfully

  /trips/{trip_id}/persons:
    get:
      tags:
        - Persons
      summary: View all persons associated with a specific trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of persons for the trip
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
    post:
      tags:
        - Persons
      summary: Add a new person to a specific trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      responses:
        '201':
          description: Person created successfully

  /trips/{trip_id}/persons/{personId}:
    get:
      tags:
        - Persons
      summary: View a specific person associated with a trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
        - name: personId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Person details
    put:
      tags:
        - Persons
      summary: Update a specific person associated with a trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
        - name: personId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      responses:
        '200':
          description: Person updated successfully
    delete:
      tags:
        - Persons
      summary: Delete a specific person associated with a trip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
        - name: personId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Person deleted successfully

  /auth/login:
    post:
      tags:
        - Auth
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@user.com
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /auth/signup:
    post:
      tags:
        - Auth
      summary: Signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: Signup successful
        '400':
          description: Invalid input

  /auth/logout:
    post:
      tags:
       - Auth
      summary: Log Out
      responses:
        '200':
          description: Logout Success
        '400':
          description: User not logged in

      